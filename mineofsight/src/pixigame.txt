
var background_group;
var tile_group;
var game_group;
var menu_group;
var game_menu_group;
var game_screen_group;
var options_menu_group;
var whole_app_group;

var background_container;
var tile_container;
var game_container;
var menu_container;
var game_menu_container;
var options_menu_container;

var play_screen_group;
var play_screen_container;

var play_group;
var play_container;




		background_group = new LayerClass();//game.add.group();
		tile_group = new LayerClass();//game.add.group();
		game_group = new LayerClass();//game.add.group();
		menu_group = new LayerClass();//game.add.group();
		
		//tile_group.cacheAsBitmap = true;
		

		play_screen_group =  new LayerClass();//game.add.group();

		play_group =  new LayerClass();//game.add.group();

		
		
		play_screen_group.add(tile_group.layer);
		play_screen_group.add(game_group.layer);
		
		play_group.add(background_group.layer);
		play_group.add(play_screen_group.layer);
		play_group.add(menu_group.layer);

		game_screen_group = new LayerClass();//game.add.group(); // used for menu pop up (pop right)
		game_screen_group.add(play_group.layer);

		game_menu_group = new LayerClass();//game.add.group();
		

		options_menu_group = new LayerClass();//game.add.group();
		//options_menu_group.bringToTop();
		//game.bringToTop(options_menu_group.layer);

		background_container = background_group;
		tile_container =tile_group;
		game_container =game_group;
		menu_container =menu_group;
		game_group_container =game_menu_group;
		options_menu_container =options_menu_group;

		whole_app_group = new LayerClass();//game.add.group();
		//whole_app_group.add(play_group);
		//whole_app_group.add(game_menu_group);
		///whole_app_group.add(options_menu_group);

		play_screen_container = play_screen_group;

		play_container = play_group;

		gBlipFrogMenu.setup();
		
		// trigger resize http://stackoverflow.com/questions/1818474/how-to-trigger-the-window-resize-event-in-javascript
		
		do_resize();
		
		game.input.onDown.add(this.on_down);
		game.input.onHold.add(this.on_down);

		//game.input.activePointer.isDown
		
		game.input.onUp.add(this.on_up);
		//game.input.activePointer.add(this.on_up);
	
		game.input.keyboard.onDownCallback = this.on_key;


		//var gameTitle = this.game.add.sprite(160,160,'atlas_blocks', 'block0.png');
		//game_group.add(gameTitle);

	

// Dict of PIXI.js textures
var g_textures = {};

loadpixiimages = function() {

	pBar.value += 30; 

	// Load spritesheet
	PIXI.loader
    	  	  .add('mysheet','assets/blocks.json')
	  	  .add('mysheet_png','assets/blocks.png')
	   	  // listen for progress - called once per loaded file
    	  	  .on('progress', onProgressCallback)
    	  	  .load(onAssetsLoaded);
};	
	
setup_pixi = function () {


};

onAssetsLoaded = function (loader,resources) {
	 // Fill out sprite data array from the JSON
	 
	  gCachedAssets['blocks.json'] = resources.mysheet.data;
	  parseAtlasDefinition(gCachedAssets['blocks.json']);

};

pBar.value += 10;

